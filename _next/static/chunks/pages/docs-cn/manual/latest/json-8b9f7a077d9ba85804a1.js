(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[36224],{17375:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,{Z:function(){return r}})},36812:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return u}});var r=n(17375),a=n(96156),s=(n(67294),n(3905));function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var p,l=(p="CodeTab",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",i({},e))}),c={};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",i(i(i({},c),n),{},{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",i({},{id:"json"}),"JSON"),(0,s.kt)("h2",i({},{id:"parse--\u89e3\u6790"}),"Parse | \u89e3\u6790"),(0,s.kt)("p",null,"Bind to JavaScript's ",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse")," and type the return value as the type you're expecting:\n\u4e0eJavaScript\u7684",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse"),"\u7ed1\u5b9a, \u5e76\u6ce8\u660e\u671f\u671b\u8fd4\u56de\u503c\u7684\u7c7b\u578b. "),(0,s.kt)(l,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,s.kt)("pre",null,(0,s.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'// declare the shape of the json you\'re binding to\n// \u58f0\u660eJSON\u7684\u7ed3\u6784\ntype data = {names: array<string>}\n\n// bind to JS\' JSON.parse\n// \u7ed1\u5b9aJS\u7684JSON.parse\n@scope("JSON") @val\nexternal parseIntoMyData: string => data = "parse"\n\nlet result = parseIntoMyData(`{"names": ["Luke", "Christine"]}`)\nlet name1 = result.names[0]\n')),(0,s.kt)("pre",null,(0,s.kt)("code",i({parentName:"pre"},{className:"language-js"}),'var result = JSON.parse("{\\"names\\": [\\"Luke\\", \\"Christine\\"]}");\nvar name1 = result.names[0];\n'))),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"data")," can be any type you assume the JSON is. As you can see, this compiles to a straightforward ",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse")," call. As with regular JS, this is convenient, but has no guarantee that e.g. the data is correctly shaped, or even syntactically valid. Slightly dangerous.\n",(0,s.kt)("inlineCode",{parentName:"p"},"data"),"\u53ef\u4ee5\u662f\u4efb\u4f55\u4f60\u60f3\u8981\u7684json\u7684\u7c7b\u578b.  \u5982\u4f60\u6240\u89c1, Rescript\u76f4\u63a5\u8c03\u7528\u4e86",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse"),".  \u8fd9\u867d\u7136\u975e\u5e38\u65b9\u4fbf, \u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u683c\u5f0f\u6b63\u786e\u6027, \u751a\u81f3\u662f\u8bed\u6cd5\u6b63\u786e\u6027.  \u5b58\u5728\u4e00\u5b9a\u7684\u5371\u9669\u6027. "),(0,s.kt)("h2",i({},{id:"stringify--\u5b57\u7b26\u4e32\u5316"}),"Stringify | \u5b57\u7b26\u4e32\u5316"),(0,s.kt)("p",null,"\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Js.Json.stringify"),":"),(0,s.kt)(l,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,s.kt)("pre",null,(0,s.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.log(Js.Json.stringifyAny(["Amy", "Joe"]))\n')),(0,s.kt)("pre",null,(0,s.kt)("code",i({parentName:"pre"},{className:"language-js"}),'console.log(JSON.stringify([\n  "Amy",\n  "Joe"\n]));\n'))),(0,s.kt)("h2",i({},{id:"advanced--\u8fdb\u9636"}),"Advanced | \u8fdb\u9636"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",i({parentName:"p"},{href:"api/js/json"}),"Js.Json")," module provides slightly safer, low-level building blocks for power users who want to parse JSON on a per-field basis. See the examples in the API docs.\n",(0,s.kt)("a",i({parentName:"p"},{href:"api/js/json"}),"Js.Json"),"\u6a21\u5757\u4e3a\u9700\u8981\u5728\u5b57\u6bb5\u7ea7\u522b\u89e3\u6790json\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u66f4\u5b89\u5168\u7684, \u4f4e\u5c42\u6b21\u7684\u6784\u5efa\u5757. \u66f4\u591a\u4f8b\u5b50\u8be6\u89c1API\u6587\u6863. "))}u.isMDXComponent=!0,u.frontmatter={title:"JSON",description:"\u5728ReScript\u4e0eJSON\u4ea4\u4e92",canonical:"/docs/manual/latest/json",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs-cn/manual/latest/json.mdx"}},16299:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs-cn/manual/latest/json",function(){return n(36812)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=16299,e(e.s=t);var t}));var t=e.O();_N_E=t}]);