(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[45985],{17375:function(e,t,a){"use strict";function n(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}a.d(t,{Z:function(){return n}})},83392:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return s}});var n=a(96156),r=a(17375),i=(a(67294),a(3905));function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){(0,n.Z)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var o={};function s(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",l(l(l({},o),a),{},{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",l({},{id:"shared-data-types--\u5171\u4eab\u6570\u636e\u7c7b\u578b"}),"Shared Data Types | \u5171\u4eab\u6570\u636e\u7c7b\u578b"),(0,i.kt)("p",null,"ReScript's built-in values of type ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"array")," and a few others have a rather interesting property: they compile to the exact same value in JavaScript!"),(0,i.kt)("p",null,"ReScript \u5185\u7f6e\u7684\u7c7b\u578b ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"array")," \u548c\u5176\u4ed6\u4e00\u4e9b\u503c\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u5c5e\u6027\uff1a\u5b83\u4eec\u5728 JavaScript \u4e2d\u4f1a\u7f16\u8bd1\u6210\u5b8c\u5168\u76f8\u540c\u7684\u503c\uff01"),(0,i.kt)("p",null,"This means that if you're passing e.g. a ReScript string to the JavaScript side, the JS side can directly use it as a native JS string. It also means that you can import a JS string and pretend it's a native ReScript string."),(0,i.kt)("p",null,"\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u8981\u5411 JavaScript \u7aef\u4f20\u9012\u4e00\u4e2a ReScript \u5b57\u7b26\u4e32\uff0cJS \u7aef\u53ef\u4ee5\u628a\u5b83\u76f4\u63a5\u5f53\u4f5c\u539f\u751f\u7684 JS \u5b57\u7b26\u4e32\u6765\u4f7f\u7528\u3002\u5b83\u8fd8\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5bfc\u5165\u4e00\u4e2a JS \u5b57\u7b26\u4e32\u5e76\u5047\u88c5\u5b83\u662f\u4e00\u4e2a\u539f\u751f ReScript \u5b57\u7b26\u4e32\u3002"),(0,i.kt)("p",null,"Unlike most compiled-to-js languages, in ReScript, ",(0,i.kt)("strong",{parentName:"p"},"you don't need to write data converters back and forth for most of our values"),"!"),(0,i.kt)("p",null,"\u548c\u5927\u591a\u6570\u7f16\u8bd1\u4e3a JS \u7684\u8bed\u8a00\u4e0d\u540c\uff0c\u5728 ReScript \u4e2d\uff0c",(0,i.kt)("strong",{parentName:"p"},"\u5927\u591a\u6570\u503c\u90fd\u4e0d\u9700\u8981\u4f60\u6765\u6765\u56de\u56de\u5730\u5199\u6570\u636e\u8f6c\u6362\u5668"),"\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Shared, bidirectionally usable types"),":"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u5171\u4eab\u7684\u3001\u53cc\u5411\u53ef\u7528\u7684\u7c7b\u578b"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"String. ReScript strings are JavaScript strings, vice-versa. (Caveat: only our backtick string ",(0,i.kt)("inlineCode",{parentName:"p"},"`hello \ud83d\udc4b ${personName}`")," supports unicode and interpolation).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Float. ReScript floats are JS numbers, vice-versa.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Array. In addition to the ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/array"}),"JS Array API"),", we provide our own ",(0,i.kt)("a",l({parentName:"p"},{href:"api/belt/array#set"}),"Belt.Array")," API too.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tuple. Compiles to a JS array. You can treat a fixed-sized, heterogenous JS array as ReScript tuple too.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Boolean.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Record. Record compiles to JS object. Therefore you can also treat JS objects as records. If they're too dynamic, consider modeling them on the ReScript side as a hashmap/dictionary ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/dict"}),(0,i.kt)("inlineCode",{parentName:"a"},"Js.Dict"))," or a ReScript object.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Object. ReScript objects are JavaScript objects, vice-versa.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Function. They compile to clean JS functions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Module. ReScript files are considered top-level modules, and are compiled to JS files 1 to 1. Nested modules are compiled to JavaScript objects.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Polymorphic variants.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Unit. The ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," type, which has a single value ",(0,i.kt)("inlineCode",{parentName:"p"},"()"),", compiles to ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," too. Likewise, you can treat an incoming JS ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"()")," if that's the only value it'll ever be.  "))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"String. ReScript \u5b57\u7b26\u4e32\u662f JavaScript \u5b57\u7b26\u4e32\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002(\u6ce8\u610f\uff1a\u53ea\u6709\u6211\u4eec\u7684\u53cd\u5f15\u53f7\u5b57\u7b26\u4e32 ",(0,i.kt)("inlineCode",{parentName:"p"},"`hello \ud83d\udc4b ${personName}`")," \u652f\u6301 unicode \u548c\u63d2\u503c)\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Float. ReScript \u6d6e\u70b9\u578b \u5c31\u662f JS \u7684\u6570\u5b57\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Array. \u9664\u4e86 ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/array"}),"JS Array API")," \u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86 ",(0,i.kt)("a",l({parentName:"p"},{href:"api/belt/array#set"}),"Belt.Array")," API\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tuple. \u7f16\u8bd1\u4e3a\u4e00\u4e2a JS \u6570\u7ec4\u3002 \u4f60\u4e5f\u53ef\u4ee5\u5c06\u56fa\u5b9a\u957f\u5ea6\u7684\u5f02\u6784 JS \u6570\u7ec4\u89c6\u4e3a ReScript \u5143\u7ec4\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Boolean.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Record. Record \u4f1a\u7f16\u8bd1\u6210 JS \u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06 JS \u5bf9\u8c61\u89c6\u4e3a\u8bb0\u5f55\u3002\u5982\u679c\u5b83\u4eec\u7684\u7ed3\u6784\u662f\u5f88\u52a8\u6001\u7684\uff0c\u53ef\u4ee5\u8003\u8651\u5728 ReScript \u7aef\u5c06\u5b83\u4eec\u5efa\u6a21\u4e3a\u6563\u5217\u56fe/\u5b57\u5178 ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/dict"}),(0,i.kt)("inlineCode",{parentName:"a"},"Js.Dict"))," \u6216\u4e00\u4e2a ReScript \u5bf9\u8c61\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Object. ReScript \u5bf9\u8c61\u662f JavaScript \u5bf9\u8c61\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Function. \u5b83\u4eec\u4f1a\u7f16\u8bd1\u4e3a\u5e72\u51c0\u7684 JS \u51fd\u6570\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Module. ReScript \u6587\u4ef6\u88ab\u8ba4\u4e3a\u662f\u9876\u7ea7\u6a21\u5757\uff0c\u5e76\u88ab 1 \u6bd4 1 \u7684\u7f16\u8bd1\u4e3a JS \u6587\u4ef6\u3002\u5d4c\u5957\u7684\u6a21\u5757\u88ab\u7f16\u8bd1\u6210 JavaScript \u5bf9\u8c61\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Polymorphic variants.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Unit. ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," \u7c7b\u578b\uff0c\u53ea\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u503c ",(0,i.kt)("inlineCode",{parentName:"p"},"()"),", \u4e5f\u4f1a\u7f16\u8bd1\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),"\u3002 \u540c\u6837\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5904\u7406\u4f20\u5165 JS \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," \u4f5c\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"()"),"\uff0c\u5982\u679c\u8fd9\u662f\u5b83\u552f\u4e00\u7684\u4ef7\u503c\u3002"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Types that are slightly different than JS, but that you can still use from JS"),":"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u7c7b\u578b\u4e0e JS \u7565\u6709\u4e0d\u540c\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u4ece JS \u4e2d\u4f7f\u7528"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Int. ",(0,i.kt)("strong",{parentName:"p"},"Ints are 32-bits"),"! Be careful, you can potentially treat them as JS numbers and vice-versa, but if the number's large, then you better treat JS numbers as floats. For example, we bind to Js.Date using ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),"s.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Option. The ",(0,i.kt)("inlineCode",{parentName:"p"},"option")," type's ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," value compiles into JS ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"Some")," value, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(5)"),", compiles to ",(0,i.kt)("inlineCode",{parentName:"p"},"5"),". Likewise, you can treat an incoming JS ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),". ",(0,i.kt)("strong",{parentName:"p"},"JS ",(0,i.kt)("inlineCode",{parentName:"strong"},"null")," isn't handled here"),". If your JS value can be ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),", use ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/nullable"}),"Js.Nullable")," helpers.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Exception.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Variant. Check the compiled JavaScript output of variant to see its shape. We don't recommend exporting a ReScript variant for pure JS usage, since they're harder to read as plain JS code, but you can do it.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"List, which is just a regular variant."))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Option. ",(0,i.kt)("inlineCode",{parentName:"p"},"option")," \u7c7b\u578b\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," \u503c\u4f1a\u7f16\u8bd1\u4e3a JS \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),"\u3002 ",(0,i.kt)("inlineCode",{parentName:"p"},"Some")," \u7684\u503c\uff0c e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(5)"),"\uff0c \u7f16\u8bd1\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"5"),"\u3002\u540c\u6837\uff0c\u60a8\u53ef\u4ee5\u5c06\u4f20\u5165\u7684 JS ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," \u4f5c\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),"\u3002 ","*","*","\u8fd9\u91cc\u4e0d\u5904\u7406 JS ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," \u3002 \u5982\u679c\u4f60\u7684 JS \u503c\u53ef\u4ee5\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"\uff0c \u7528 ",(0,i.kt)("a",l({parentName:"p"},{href:"api/js/nullable"}),"Js.Nullable")," \u5904\u7406\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Exception.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Int. ",(0,i.kt)("strong",{parentName:"p"},"IInt \u662f 32 \u4f4d\u7684\uff01"),"! \u5c0f\u5fc3\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u770b\u4f5c JS \u6570\u5b57\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u4f46\u662f\u5982\u679c\u6570\u5b57\u5f88\u5927\uff0c\u90a3\u4e48\u60a8\u6700\u597d\u5c06 JS \u6570\u5b57\u89c6\u4e3a\u6d6e\u70b9\u6570\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u7ed1\u5b9a Js.Date \u4f7f\u7528\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"float")," \u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Variant. \u68c0\u67e5\u53d8\u4f53\u5df2\u7f16\u8bd1 JavaScript \u8f93\u51fa\u4ee5\u67e5\u770b\u5176\u5f62\u72b6\u3002 \u6211\u4eec\u4e0d\u5efa\u8bae\u4e3a\u5355\u7eaf\u4e3a JS \u4f7f\u7528\u5bfc\u51fa ReScript \u53d8\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u96be\u88ab\u7406\u89e3\u4e3a\u666e\u901a\u7684 JS \u4ee3\u7801\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u8fd9\u4e48\u505a\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"List, \u8fd9\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u53d8\u4f53\u3002"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Non-shared types (aka internal types)"),":"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u975e\u5171\u4eab\u7c7b\u578b(\u53c8\u540d\u5185\u90e8\u7c7b\u578b)"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Character."),(0,i.kt)("li",{parentName:"ul"},"Int64."),(0,i.kt)("li",{parentName:"ul"},"Lazy values."),(0,i.kt)("li",{parentName:"ul"},"Everything else.")),(0,i.kt)("p",null,"Many of these are stable, which means that you can still serialize/deserialize them as-is without manual conversions. But we discourage actively peeking into their structure otherwise."),(0,i.kt)("p",null,"\u5176\u4e2d\u8bb8\u591a\u662f\u7a33\u5b9a\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4ecd\u7136\u53ef\u4ee5\u6309\u539f\u6837\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u624b\u52a8\u8f6c\u6362\u3002\u4f46\u6211\u4eec\u4e0d\u9f13\u52b1\u4e3b\u52a8\u7aa5\u63a2\u4ed6\u4eec\u7684\u7ed3\u6784\u3002"),(0,i.kt)("p",null,"These types require manual conversions if you want to export them for JS consumption. For a seamless JS/TypeScript/Flow integration experience, you might want to use ",(0,i.kt)("a",l({parentName:"p"},{href:"https://github.com/cristianoc/gentype"}),"genType")," instead of doing conversions by hand."),(0,i.kt)("p",null,"\u5982\u679c\u8981\u5bfc\u51fa\u8fd9\u4e9b\u7c7b\u578b\u4ee5\u4f9b JS \u4f7f\u7528\uff0c\u5219\u9700\u8981\u624b\u52a8\u8f6c\u6362\u3002\u8981\u83b7\u5f97\u65e0\u7f1d\u8854\u63a5 JS/TypeScript/Flow \u7684\u96c6\u6210\u4f53\u9a8c\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528 ",(0,i.kt)("a",l({parentName:"p"},{href:"https://github.com/cristianoc/gentype"}),"genType"),"\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u8fdb\u884c\u8f6c\u6362\u3002"))}s.isMDXComponent=!0,s.frontmatter={title:"Shared Data Types",description:"Data types that share runtime presentation between JS and ReScript",canonical:"/docs/manual/latest/shared-data-types",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs-cn/manual/latest/shared-data-types.mdx"}},79774:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs-cn/manual/latest/shared-data-types",function(){return a(83392)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=79774,e(e.s=t);var t}));var t=e.O();_N_E=t}]);